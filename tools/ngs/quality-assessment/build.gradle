apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = "de.dkfz.tbi.ngstools.qualityAssessment.QualityAssessment"

baseName = "quality-assessment"

repositories {
    maven { url '$ARTIFACTORY_URL' }
}

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.6'
    compile group: 'gson', name: 'gson', version: '2.2.2'
    compile group: 'sam', name: 'sam', version: '1.78'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

jar {
    manifest.mainAttributes("Main-Class" : mainClassName)
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    version = branchName()
}

run {
    List<String> params = [
        "$HOME/Downloads/tumor_run121026_SN952_0117_BC19ADACXX_paired.bam.sorted.bam",
        "$HOME/tests/qa/develSmallTest/output/output.json",
        "$HOME/tests/qa/develSmallTest/output/output.tsv",
        "$HOME/tests/qa/develSmallTest/output/output.hst",
        "36",
        "25",
        "0",
        "1",
        "1000",
        "10000"]

    args params
}

// Cannot replace Unit tests.. but is the best thing we have at this point for overall overview...
// TODO this is only checking for the JSON file.. maybe it should be done for the other files too
task diff(dependsOn: 'run') << {
    exec {
        executable 'diff'
        List<String> params = ["$HOME/tests/qa/develSmallTest/correct/outputPretty.json", "$HOME/tests/qa/develSmallTest/output/output.json"]
        args params
    }
}

task deployTest(type: Copy, dependsOn: ['clean', 'jar']) {
//    String newName = "qualityAssessment-qualityAssessmentCleaning.jar"
    String newName = "qualityAssessmentLars.jar"
    String oldName = "${baseName}-${branchName()}.jar"
    println "copying : " + oldName
    String deployPath = "$BQ_ROOTPATH/$USER/testQA/qaForTests/"
    from "build/libs/$oldName"
    into "$deployPath"
    rename "$oldName",
           "$newName"
//    fileMode = 0777
    //workaround because this fileMode thing is not working at the moment..
    doLast {
        ant.chmod(dir: "$deployPath", perm: "777", includes: "$newName")
    }
}

task branchName() << {
    println "branchName : " + branchName()
}

private String branchName() {
    String branchName = System.getenv("GIT_BRANCH")
    if (!branchName) {
        // not specified through environment - try to resolve through git
        ext.proc = "git symbolic-ref HEAD".execute()
        proc.waitFor()
        branchName = proc.in.text
    }
    // remove git path structure and appended line feed
    if (branchName.contains("/")) {
        return branchName.substring(branchName.lastIndexOf("/") + 1, branchName.length() - 1)
    }
    return branchName
}
