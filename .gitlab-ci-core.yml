---
# Copyright 2011-2019 The OTP authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file contains gitlab ci jobs running in all repositories.
# The jobs shouldn't have dependencies to jobs running not in all repositories

image: registry.gitlab.com/one-touch-pipeline/otp/otp-gitlab-ci


# notes:
## recursive expansion of variables does not work
## having multiple commands in one variable does not work
## putting the expire time to a variable does not work
variables:
  GRADLE_OPTS: '-Xms1g -Xmx4g -Dorg.gradle.daemon=false'
  GRAILS_OPTS: '-Xmx4g'
  ARTIFACTS_BASE_DIRECTORY: 'artifacts'
  CACHE: $CI_PROJECT_DIR/cache
  GRADLE_USER_HOME: $CI_PROJECT_DIR/cache/gradle # overrides GRADLE_USER_HOME default for caching
  NPM_CACHE: $CI_PROJECT_DIR/cache/npm
  ARTIFACT_DOWNLOAD_ATTEMPTS: "3"
  GET_SOURCES_ATTEMPTS: "3"
  RESTORE_CACHE_ATTEMPTS: "3"
  ENABLE_CYPRESS: "true"  #indicate, if cypress should run or not

#----------------------------
# templates
#----------------------------

.abstract_base_template:
  image: registry.gitlab.com/one-touch-pipeline/otp/otp-gitlab-ci
  stage: test
  dependencies: [ ]
  needs: [ ]
  only:
    - branches
    - tags
  cache:
    key:
      files:
        - $CI_PROJECT_DIR/gradle/wrapper/gradle-wrapper.properties
      prefix: $CI_JOB_NAME
    paths:
      - $CACHE
      - node_modules/
  artifacts: &artifacts_template
    expire_in: 4 week
  before_script:
    - set -e
    - devScripts/gitlab-ci/init.sh

# ------------------------------------------------------
# jobs stage scanning
# ------------------------------------------------------

otp license:
  image: groovy:3.0-jdk11-alpine
  stage: scanning
  dependencies: [ ]
  needs: [ ]
  only:
    - branches
    - tags
  script:
    - groovy devScripts/gitlab-ci/license-checker/licensecheck.groovy

# ------------------------------------------------------
# jobs stage tests
# ------------------------------------------------------

unit tests:
  extends: .abstract_base_template
  stage: test
  script:
    - set -e
    - ./gradlew --build-cache test
  artifacts:
    <<: *artifacts_template
    paths:
      - build/test-results/test/*.xml
      - build/reports/tests
    reports:
      junit: build/test-results/test/*.xml
    when: always

integration tests:
  extends: .abstract_base_template
  stage: test
  script:
    - set -e
    - ./gradlew --build-cache integrationTest
  artifacts:
    <<: *artifacts_template
    paths:
      - build/test-results/integrationTest/*.xml
      - build/reports/tests
    reports:
      junit: build/test-results/integrationTest/*.xml
    when: always

test migration:
  extends: .abstract_base_template
  stage: test
  services:
    - postgres:9.5.9
  variables:
    POSTGRES_DB: otp
    POSTGRES_USER: otp
    POSTGRES_PASSWORD: otp
  before_script:
    - set -e
    - devScripts/gitlab-ci/init.sh
    - cp $OTP_PROPERTIES_POSTGRES ~/.otp.properties
  script:
    - set -e
    - ./gradlew --build-cache dbmUpdate
    - bash ./devScripts/grails-migration-plugin/create-dbm-gorm-diff-without-false-changes.sh testing
    - bash ./devScripts/grails-migration-plugin/check-for-changelog-file.sh testing
    - bash ./devScripts/grails-migration-plugin/check-variable-problems.sh
  artifacts:
    <<: *artifacts_template
    paths:
      - migrations/changelogs/*/testing.groovy
    when: on_failure

cypress tests:
  extends: .abstract_base_template
  only:
    refs:
      - branches
      - tags
    variables:
      - $ENABLE_CYPRESS == 'true'
  stage: test
  allow_failure: true
  cache:
    when: 'always'
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:dind
      alias: openssh-server
  script:
    - set -e
    - devScripts/gitlab-ci/cypress/cypress.sh
  artifacts:
    expire_in: 4 week
    paths:
      - cypress/screenshots
      - cypressReport.txt
      - logs/
    when: always

# ------------------------------------------------------
# jobs stage codestyle
# ------------------------------------------------------

codenarc:
  extends: .abstract_base_template
  stage: codestyle
  only:
    - branches
  script:
    - set -e
    - ./gradlew --build-cache codenarcAll
  after_script:
    - set -e
    - devScripts/gitlab-ci/codenarc-informations.sh
  artifacts:
    <<: *artifacts_template
    paths:
      - build/reports/codenarc
    when: always
    reports:
      metrics: metrics.txt

eslint:
  extends: .abstract_base_template
  stage: codestyle
  only:
    - branches
  script:
    - set -e
    - ./gradlew --build-cache esLintExportCi
  artifacts:
    <<: *artifacts_template
    paths:
      - build/reports/eslint
    when: always

# ------------------------------------------------------
# jobs stage war
# ------------------------------------------------------

create war:
  extends: .abstract_base_template
  stage: war
  script:
    - devScripts/gitlab-ci/createWar.sh

# ------------------------------------------------------
# jobs stage doc
# ------------------------------------------------------

create doc:
  extends: .abstract_base_template
  stage: doc
  script:
    - set -e
    - ./gradlew --build-cache generateHtml
  artifacts:
    <<: *artifacts_template
    paths:
      - build/docs

generate_changelog:
  extends: .abstract_base_template
  stage: doc
  script:
    - mkdir -p $ARTIFACTS_BASE_DIRECTORY
    - set +e
    - LATEST_TAG=$(git describe --abbrev=0 --tags --match "v*.*.*" HEAD^)
    - set -e
    - 'if [[ -z "${LATEST_TAG}" ]]; then git fetch --unshallow --tags ; LATEST_TAG=$(git describe --abbrev=0 --tags --match "v*.*.*" HEAD^) ; fi'
    - echo $LATEST_TAG
    - git config gitchangelog.rc-path scripts/gitchangelog/gitchangelog.rc.reference
    - scripts/gitchangelog/gitchangelog.py ^$LATEST_TAG HEAD >> $ARTIFACTS_BASE_DIRECTORY/CHANGELOG.txt
    - git config gitchangelog.rc-path scripts/gitchangelog/release_notes_gitchangelog.rc.reference
    - scripts/gitchangelog/gitchangelog.py ^$LATEST_TAG HEAD >> $ARTIFACTS_BASE_DIRECTORY/RELEASE_NOTES.txt
    - cat $ARTIFACTS_BASE_DIRECTORY/CHANGELOG.txt
    - cat $ARTIFACTS_BASE_DIRECTORY/RELEASE_NOTES.txt
  artifacts:
    <<: *artifacts_template
    paths:
      - $ARTIFACTS_BASE_DIRECTORY
    when: on_success


# ------------------------------------------------------
# jobs stage public doc
# ------------------------------------------------------

# This must only run on the master branch to deploy the only pages site
# https://docs.gitlab.com/ee/user/project/pages/introduction.html#gitlab-ciyml-for-a-repository-where-theres-also-actual-code
pages:
  stage: public doc
  dependencies:
    - create doc
  script:
    - mv build/docs public
  artifacts:
    expire_in: 1 day
    paths:
      - public
  only:
    - master
  variables:
    GIT_STRATEGY: none
